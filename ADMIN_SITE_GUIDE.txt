# 🏢 Admin Site Management - Complete Guide

## ✅ **What's Now Implemented**

Site admins can now **fetch all user data from their site at once** while maintaining data isolation between different sites.

### 🔐 **Admin Site Access Rules**
- **Site Isolation**: Admins can only access data from users in their same site
- **Company Isolation**: Admins can only access data from users in their same company
- **Role Verification**: Only users with `admin` role can access these endpoints
- **Data Aggregation**: All user data is combined with username identification

---

## 🎯 **How Site Admin Access Works**

### **✅ CORRECT SITE ACCESS**
```javascript
// Admin from "Site A" can access all users from "Site A"
// Admin from "Site B" cannot access users from "Site A"
GET /api/admin/site/users          // Get all users in admin's site
GET /api/admin/site/materials      // Get all materials from all users in site
GET /api/admin/site/daily-reports  // Get all daily reports from all users in site
```

### **🔒 SECURITY FEATURES**
- **Site Verification**: Only users from the same site are accessible
- **Company Verification**: Only users from the same company are accessible
- **Role Verification**: Only admin users can access these endpoints
- **Data Identification**: Each record includes the username for identification

---

## 📋 **Complete Admin Site API Reference**

### **👥 User Management**

#### **Get All Users in Site**
```javascript
GET /api/admin/site/users
// Response: List of all users in admin's site with their data counts
{
    "site": "Site A",
    "company": "Company ABC",
    "totalUsers": 5,
    "users": [
        {
            "username": "john",
            "database": "daily_report_john_siteA_companyABC",
            "data": {
                "materials": 10,
                "dailyReports": 25,
                "receivedItems": 15,
                "totalPrices": 8
            },
            "databaseSize": 1024000
        }
    ]
}
```

#### **Get Specific User's Data**
```javascript
GET /api/admin/site/users/:username
// Response: Complete data for a specific user in the site
{
    "username": "john",
    "site": "Site A",
    "company": "Company ABC",
    "database": "daily_report_john_siteA_companyABC",
    "data": {
        "materials": [...],
        "dailyReports": [...],
        "receivedItems": [...],
        "totalPrices": [...]
    },
    "counts": {
        "materials": 10,
        "dailyReports": 25,
        "receivedItems": 15,
        "totalPrices": 8
    }
}
```

### **📊 Data Aggregation**

#### **Get All Materials from All Users**
```javascript
GET /api/admin/site/materials
// Response: All materials from all users in the site
{
    "site": "Site A",
    "company": "Company ABC",
    "totalMaterials": 50,
    "materials": [
        {
            "_id": "...",
            "materialName": "Cable",
            "unit": "meter",
            "materialPrice": 10.50,
            "laborPrice": 5.25,
            "username": "john"  // Identifies which user owns this material
        }
    ]
}
```

#### **Get All Daily Reports from All Users**
```javascript
GET /api/admin/site/daily-reports
GET /api/admin/site/daily-reports?start=2024-01-01&end=2024-01-31
// Response: All daily reports from all users in the site
{
    "site": "Site A",
    "company": "Company ABC",
    "totalReports": 150,
    "dailyReports": [
        {
            "_id": "...",
            "date": "2024-01-15",
            "materialName": "Cable",
            "quantity": 100,
            "location": "Building A",
            "username": "john"  // Identifies which user owns this report
        }
    ]
}
```

#### **Get All Received Items from All Users**
```javascript
GET /api/admin/site/received
GET /api/admin/site/received?start=2024-01-01&end=2024-01-31
// Response: All received items from all users in the site
{
    "site": "Site A",
    "company": "Company ABC",
    "totalReceivedItems": 75,
    "receivedItems": [
        {
            "_id": "...",
            "date": "2024-01-15",
            "materialName": "Cable",
            "quantity": 200,
            "supplier": "Supplier XYZ",
            "username": "john"  // Identifies which user owns this item
        }
    ]
}
```

#### **Get All Total Prices from All Users**
```javascript
GET /api/admin/site/total-prices
GET /api/admin/site/total-prices?start=2024-01-01&end=2024-01-31
// Response: All total prices from all users in the site
{
    "site": "Site A",
    "company": "Company ABC",
    "totalPrices": 40,
    "totalPrices": [
        {
            "_id": "...",
            "date": "2024-01-15",
            "materialName": "Cable",
            "quantity": 100,
            "totalPrice": 1575.00,
            "username": "john"  // Identifies which user owns this price
        }
    ]
}
```

### **📈 Site Statistics**

#### **Get Comprehensive Site Statistics**
```javascript
GET /api/admin/site/statistics
// Response: Complete statistics for the entire site
{
    "site": "Site A",
    "company": "Company ABC",
    "statistics": {
        "totalUsers": 5,
        "totalMaterials": 50,
        "totalDailyReports": 150,
        "totalReceivedItems": 75,
        "totalPrices": 40,
        "totalDatabaseSize": 5120000,
        "averageMaterialsPerUser": 10,
        "averageReportsPerUser": 30
    }
}
```

---

## 🔧 **How to Use Admin Site Features**

### **1. Authentication Required**
```javascript
// All admin site requests require authentication
const response = await fetch('/api/admin/site/users', {
    headers: {
        'Authorization': `Bearer ${adminToken}`,
        'Content-Type': 'application/json'
    }
});
```

### **2. Date Range Queries**
```javascript
// Get daily reports for a specific date range
const response = await fetch('/api/admin/site/daily-reports?start=2024-01-01&end=2024-01-31', {
    headers: {
        'Authorization': `Bearer ${adminToken}`,
        'Content-Type': 'application/json'
    }
});
```

### **3. User-Specific Data Access**
```javascript
// Get complete data for a specific user
const response = await fetch('/api/admin/site/users/john', {
    headers: {
        'Authorization': `Bearer ${adminToken}`,
        'Content-Type': 'application/json'
    }
});
```

---

## 🧪 **Testing Admin Site Features**

### **1. Test Site Access**
```bash
# Test with admin token (replace ADMIN_TOKEN with actual token)
curl -X GET http://localhost:3000/api/admin/site/users \
  -H "Authorization: Bearer ADMIN_TOKEN"
```

### **2. Test Data Aggregation**
```bash
# Get all materials from all users in the site
curl -X GET http://localhost:3000/api/admin/site/materials \
  -H "Authorization: Bearer ADMIN_TOKEN"
```

### **3. Test Date Range Queries**
```bash
# Get daily reports for January 2024
curl -X GET "http://localhost:3000/api/admin/site/daily-reports?start=2024-01-01&end=2024-01-31" \
  -H "Authorization: Bearer ADMIN_TOKEN"
```

---

## 🔍 **Verification Steps**

### **1. Check Site Isolation**
```javascript
// Admin from Site A should only see users from Site A
GET /api/admin/site/users
// Should only return users from the same site as the admin
```

### **2. Check Data Aggregation**
```javascript
// All data should include username for identification
GET /api/admin/site/materials
// Each material should have a "username" field
```

### **3. Check Date Range Filtering**
```javascript
// Date range queries should work across all users
GET /api/admin/site/daily-reports?start=2024-01-01&end=2024-01-31
// Should return reports from all users in the date range
```

---

## 🚨 **Important Security Notes**

### **✅ DO THIS:**
- Always include admin authentication token
- Verify admin role before accessing these endpoints
- Use date range queries for large datasets
- Check site and company isolation

### **❌ DON'T DO THIS:**
- Don't access these endpoints without admin role
- Don't assume cross-site access is allowed
- Don't forget to handle large datasets properly
- Don't expose admin tokens in client-side code

---

## 📊 **Example Use Cases**

### **1. Site Manager Dashboard**
```javascript
// Get comprehensive site overview
const siteStats = await fetch('/api/admin/site/statistics');
const siteUsers = await fetch('/api/admin/site/users');
const siteMaterials = await fetch('/api/admin/site/materials');
```

### **2. Monthly Reports**
```javascript
// Get all daily reports for the month
const monthlyReports = await fetch('/api/admin/site/daily-reports?start=2024-01-01&end=2024-01-31');
```

### **3. User Performance Analysis**
```javascript
// Get specific user's complete data
const userData = await fetch('/api/admin/site/users/john');
```

### **4. Material Inventory**
```javascript
// Get all materials from all users
const allMaterials = await fetch('/api/admin/site/materials');
```

---

## 🆘 **Troubleshooting**

### **Problem: Admin cannot access site data**
**Solution:**
1. Verify admin role in user account
2. Check if admin is from the same site
3. Verify authentication token is valid
4. Check server logs for errors

### **Problem: No data returned**
**Solution:**
1. Check if users exist in the same site
2. Verify user databases are created
3. Check if users have data in their databases
4. Verify site and company matching

### **Problem: Cross-site access attempted**
**Solution:**
1. This is expected behavior - site isolation is working
2. Admin can only access users from their own site
3. This is a security feature, not a bug

---

## 🎉 **Success Indicators**

✅ **Site isolation working** - Admin only sees users from their site  
✅ **Data aggregation working** - All user data is combined with identification  
✅ **Security maintained** - Only admin users can access these endpoints  
✅ **Performance good** - Large datasets are handled efficiently  
✅ **Date filtering working** - Date range queries work across all users  

---

## 📋 **API Endpoints Summary**

| Endpoint | Description | Query Parameters |
|----------|-------------|------------------|
| `GET /api/admin/site/users` | Get all users in site | None |
| `GET /api/admin/site/users/:username` | Get specific user's data | None |
| `GET /api/admin/site/materials` | Get all materials from all users | None |
| `GET /api/admin/site/daily-reports` | Get all daily reports from all users | `start`, `end` |
| `GET /api/admin/site/received` | Get all received items from all users | `start`, `end` |
| `GET /api/admin/site/total-prices` | Get all total prices from all users | `start`, `end` |
| `GET /api/admin/site/statistics` | Get comprehensive site statistics | None |

---

**🎯 Goal Achieved: Site admins can now fetch all user data from their site at once while maintaining proper security and data isolation!** 